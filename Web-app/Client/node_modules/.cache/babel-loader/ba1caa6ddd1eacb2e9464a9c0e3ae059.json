{"ast":null,"code":"var _jsxFileName = \"/home/ubuntu/Desktop/bloodTrackingSystem/Web-app/Client/src/components/contents/hospital/Hospital-Bag-Recieved.js\",\n    _s2 = $RefreshSig$();\n\nimport { findDOMNode } from 'react-dom';\nimport { useHistory } from 'react-router-dom';\nimport HospitalHeader from '../../headers/hospital';\nimport $ from 'jquery';\nimport { Component } from 'react';\nimport Connect from './connectRecieve';\nimport Axios from 'axios';\nimport { useParams } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction HospitalBagRecieved() {\n  _s2();\n\n  var _s = $RefreshSig$();\n\n  let content = null;\n  const {\n    id\n  } = \"BD576:O-\";\n  const url = \"http://localhost:5001/query/bag?id=BD901:AB-\";\n  const [out, setOut] = useState(null);\n  useEffect(() => {\n    Axios.get(url).then(response => {\n      setOut(response.data);\n    });\n  }, [url]);\n\n  const ListContainer = () => {\n    _s();\n\n    const {\n      out\n    } = HospitalBagRecieved();\n    const [modalShow, setModalShow] = React.useState(false);\n\n    if (out) {\n      content = out;\n    }\n\n    if (content) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(HospitalHeader, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"rec\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            class: \"login-box\",\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              children: \"Info Needed\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 40,\n              columnNumber: 7\n            }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"user-box\",\n                children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"text\",\n                  name: \"\",\n                  required: \"\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 43,\n                  columnNumber: 11\n                }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                  children: \"Enter Blood Bag ID\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 44,\n                  columnNumber: 11\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 42,\n                columnNumber: 9\n              }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n                id: \"confirm\",\n                onClick: () => setModalShow(true),\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 47,\n                  columnNumber: 11\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 48,\n                  columnNumber: 11\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 49,\n                  columnNumber: 11\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 50,\n                  columnNumber: 11\n                }, this), \"Confirm\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 46,\n                columnNumber: 9\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 41,\n              columnNumber: 7\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 7\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 7\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: [\" \", content.output]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 12\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 7\n      }, this);\n    }\n  };\n\n  _s(ListContainer, \"xuPPltV/3J92+XaNotdpXxySp+I=\");\n}\n\n_s2(HospitalBagRecieved, \"s6jnNJlIwYVWcqvqhdr48/dXufE=\");\n\n_c = HospitalBagRecieved;\nexport default HospitalBagRecieved;\n\nvar _c;\n\n$RefreshReg$(_c, \"HospitalBagRecieved\");","map":{"version":3,"sources":["/home/ubuntu/Desktop/bloodTrackingSystem/Web-app/Client/src/components/contents/hospital/Hospital-Bag-Recieved.js"],"names":["findDOMNode","useHistory","HospitalHeader","$","Component","Connect","Axios","useParams","useState","useEffect","HospitalBagRecieved","content","id","url","out","setOut","get","then","response","data","ListContainer","modalShow","setModalShow","React","output"],"mappings":";;;AAAA,SAASA,WAAT,QAA4B,WAA5B;AACA,SAAQC,UAAR,QAAyB,kBAAzB;AACA,OAAOC,cAAP,MAA2B,wBAA3B;AACA,OAAOC,CAAP,MAAc,QAAd;AACA,SAASC,SAAT,QAA0B,OAA1B;AACA,OAAOC,OAAP,MAAoB,kBAApB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAAQC,SAAR,QAAwB,kBAAxB;AACA,SAAQC,QAAR,EAAkBC,SAAlB,QAAkC,OAAlC;;;AAEA,SAASC,mBAAT,GAA+B;AAAA;;AAAA;;AAE7B,MAAIC,OAAO,GAAC,IAAZ;AACA,QAAM;AAACC,IAAAA;AAAD,MAAO,UAAb;AACA,QAAMC,GAAG,GAAG,8CAAZ;AACA,QAAM,CAACC,GAAD,EAAMC,MAAN,IAAgBP,QAAQ,CAAC,IAAD,CAA9B;AAGAC,EAAAA,SAAS,CAAC,MAAM;AACdH,IAAAA,KAAK,CAACU,GAAN,CAAUH,GAAV,EACGI,IADH,CACSC,QAAD,IAAa;AAChBH,MAAAA,MAAM,CAACG,QAAQ,CAACC,IAAV,CAAN;AACJ,KAHD;AAKD,GANQ,EAMN,CAACN,GAAD,CANM,CAAT;;AAQA,QAAMO,aAAa,GAAG,MAAM;AAAA;;AAC5B,UAAM;AAAEN,MAAAA;AAAF,QAAUJ,mBAAmB,EAAnC;AACA,UAAM,CAACW,SAAD,EAAYC,YAAZ,IAA4BC,KAAK,CAACf,QAAN,CAAe,KAAf,CAAlC;;AAEA,QAAGM,GAAH,EAAO;AACLH,MAAAA,OAAO,GAAGG,GAAV;AACD;;AACD,QAAGH,OAAH,EAAW;AACT,0BACE;AAAA,gCACA,QAAC,cAAD;AAAA;AAAA;AAAA;AAAA,gBADA,eAEA;AAAK,UAAA,EAAE,EAAC,KAAR;AAAA,iCACA;AAAK,YAAA,KAAK,EAAC,WAAX;AAAA,oCACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADA,eAEA;AAAA,sCACE;AAAK,gBAAA,SAAS,EAAC,UAAf;AAAA,wCACE;AAAO,kBAAA,IAAI,EAAC,MAAZ;AAAmB,kBAAA,IAAI,EAAC,EAAxB;AAA2B,kBAAA,QAAQ,EAAC;AAApC;AAAA;AAAA;AAAA;AAAA,wBADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF,eAKE;AAAG,gBAAA,EAAE,EAAC,SAAN;AAAgB,gBAAA,OAAO,EAAE,MAAMW,YAAY,CAAC,IAAD,CAA3C;AAAA,wCACE;AAAA;AAAA;AAAA;AAAA,wBADF,eAEE;AAAA;AAAA;AAAA;AAAA,wBAFF,eAGE;AAAA;AAAA;AAAA;AAAA,wBAHF,eAIE;AAAA;AAAA;AAAA;AAAA,wBAJF;AAAA;AAAA;AAAA;AAAA;AAAA,sBALF;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,gBAFA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF;AAuBC,KAxBH,MAyBI;AACF,0BACE;AAAA,+BAAK;AAAA,0BAAMX,OAAO,CAACa,MAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAL;AAAA;AAAA;AAAA;AAAA,cADF;AAGD;AACF,GArCC;;AAhB6B,KAgBvBJ,aAhBuB;AAsD9B;;IAtDQV,mB;;KAAAA,mB;AAuDT,eAAeA,mBAAf","sourcesContent":["import { findDOMNode } from 'react-dom';\nimport {useHistory} from 'react-router-dom'\nimport HospitalHeader from '../../headers/hospital'\nimport $ from 'jquery'\nimport { Component } from 'react';\nimport Connect from './connectRecieve';\nimport Axios from 'axios';\nimport {useParams} from 'react-router-dom'\nimport {useState, useEffect} from 'react'\n\nfunction HospitalBagRecieved() {\n\n  let content=null;\n  const {id} = \"BD576:O-\"\n  const url = \"http://localhost:5001/query/bag?id=BD901:AB-\";\n  const [out, setOut] = useState(null);\n\n\n  useEffect(() => {\n    Axios.get(url)\n      .then((response)=> {\n         setOut(response.data);\n    });\n\n  }, [url]);\n\n  const ListContainer = () => {\n  const { out } = HospitalBagRecieved(); \n  const [modalShow, setModalShow] = React.useState(false);\n\n  if(out){\n    content = out;\n  }\n  if(content){\n    return(\n      <div>\n      <HospitalHeader/>\n      <div id=\"rec\">\n      <div class=\"login-box\">\n      <h2>Info Needed</h2>\n      <form>\n        <div className=\"user-box\">\n          <input type=\"text\" name=\"\" required=\"\"/>\n          <label>Enter Blood Bag ID</label>\n        </div>\n        <a id=\"confirm\" onClick={() => setModalShow(true)} >\n          <span></span>\n          <span></span>\n          <span></span>\n          <span></span>\n          Confirm\n        </a>\n      </form>\n    </div>\n    </div>\n    </div>  \n  );\n    }\n  else{\n    return(\n      <div><h1> {content.output}</h1></div>\n    )\n  }\n}\n}\nexport default HospitalBagRecieved;"]},"metadata":{},"sourceType":"module"}