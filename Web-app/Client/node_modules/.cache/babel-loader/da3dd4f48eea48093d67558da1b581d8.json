{"ast":null,"code":"var _jsxFileName = \"/home/ubuntu/Desktop/bloodTrackingSystem/Web-app/Client/src/components/contents/hospital/test.js\";\nimport { findDOMNode } from 'react-dom';\nimport { useHistory } from 'react-router-dom';\nimport HospitalHeader from '../../headers/hospital';\nimport $ from 'jquery';\nimport { Component } from 'react';\nimport Connect from './connectRecieve';\nimport Axios from 'axios';\nimport { useParams } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { EventEmitter } from 'events';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport class TestFn extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      posts: [],\n      DIN: \"123\"\n    };\n  }\n\n  test(event) {\n    event.preventDefault();\n    axios.get(`http://localhost:5000/query/bag?id=${this.state.DIN}`).then(response => {\n      let output = Object.values(response.data);\n      let objectOutput = JSON.parse(output[0]);\n      console.log(\"RESPONSE\", objectOutput.DIN);\n      alert(response.data.output);\n      this.setState({\n        posts: response.data.output\n      });\n    }).catch(error => {\n      console.log(\"TEST ERROR\", error);\n    });\n  }\n\n  handleInoutChange(event) {\n    event.preventDefault();\n    console.log(event.target.value);\n  } //componentDidMount(){\n  //}\n\n\n  render() {\n    const {\n      posts\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(HospitalHeader, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"rec\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"login-box\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Info Needed\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"user-box\",\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                value: this.state.DIN,\n                onChange: event => {\n                  this.handleInoutChange(event);\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 56,\n                columnNumber: 11\n              }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"Enter Blood Bag ID\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 57,\n                columnNumber: 11\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 9\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              id: \"confirm\",\n              onClick: event => this.test(event),\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 60,\n                columnNumber: 11\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 61,\n                columnNumber: 11\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 62,\n                columnNumber: 11\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 63,\n                columnNumber: 11\n              }, this), \"Confirm\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 9\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [\"output\", posts.length ? /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [\" \", posts]\n              }, posts.DIN, true, {\n                fileName: _jsxFileName,\n                lineNumber: 70,\n                columnNumber: 13\n              }, this) : null]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 9\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 7\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 7\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/home/ubuntu/Desktop/bloodTrackingSystem/Web-app/Client/src/components/contents/hospital/test.js"],"names":["findDOMNode","useHistory","HospitalHeader","$","Component","Connect","Axios","useParams","useState","useEffect","axios","EventEmitter","TestFn","constructor","props","state","posts","DIN","test","event","preventDefault","get","then","response","output","Object","values","data","objectOutput","JSON","parse","console","log","alert","setState","catch","error","handleInoutChange","target","value","render","length"],"mappings":"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","sourcesContent":["import { findDOMNode } from 'react-dom';\nimport {useHistory} from 'react-router-dom'\nimport HospitalHeader from '../../headers/hospital'\nimport $ from 'jquery'\nimport { Component } from 'react';\nimport Connect from './connectRecieve';\nimport Axios from 'axios';\nimport {useParams} from 'react-router-dom'\nimport {useState, useEffect} from 'react'\nimport axios from 'axios';\nimport { EventEmitter } from 'events';\n\n\nexport class TestFn extends Component{\n    constructor(props){\n      super(props)\n      this.state={\n        posts:[],\n        DIN:\"123\"\n      }\n    }\n\n    test(event){\n      event.preventDefault();\n      axios.get(`http://localhost:5000/query/bag?id=${this.state.DIN}`)\n      .then(response =>{\n        let output = Object.values(response.data);\n        let objectOutput = JSON.parse(output[0]);\n        console.log(\"RESPONSE\", objectOutput.DIN);\n        alert(response.data.output)\n        this.setState({posts:response.data.output})\n      })\n      .catch(error=>{\n        console.log(\"TEST ERROR\", error)\n      })\n\n    }\n    handleInoutChange(event){\n      event.preventDefault();\n      console.log(event.target.value);\n    }\n\n    //componentDidMount(){\n    //}\n\n    render(){\n      const {posts} = this.state\n    return(\n        <div>\n      <HospitalHeader/>\n      <div id=\"rec\">\n      <div class=\"login-box\">\n      <h2>Info Needed</h2>\n      <form >\n        <div className=\"user-box\">\n          <input type=\"text\" value={this.state.DIN} onChange={(event) =>{this.handleInoutChange(event)}}/>\n          <label>Enter Blood Bag ID</label>\n        </div>\n        <button id=\"confirm\" onClick={(event)=>this.test(event)}>\n          <span></span>\n          <span></span>\n          <span></span>\n          <span></span>\n          Confirm\n        </button>\n        <div>\n          output\n          {\n            posts.length ?\n            <div key={posts.DIN}> {posts}</div>:\n            null\n          }\n        </div>\n      </form>\n    </div>\n    </div>\n    </div>  \n    );\n    \n  }\n}"]},"metadata":{},"sourceType":"module"}